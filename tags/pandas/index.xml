<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pandas on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/pandas/</link>
    <description>Recent content in Pandas on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 13 Apr 2016 18:02:04 +0800</lastBuildDate>
    
	<atom:link href="http://hshsh.me/tags/pandas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pandas学习笔记（二）：基本数据结构</title>
      <link>http://hshsh.me/post/2016-04-13-python-pandas-notes-02/</link>
      <pubDate>Wed, 13 Apr 2016 18:02:04 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-13-python-pandas-notes-02/</guid>
      <description>Pandas的开发者是：Wes McKinney，这位大牛工作的时候没有顺手的工具，就决定自己顺手写一个出来。
Pandas具有但不限于一下特点：
 具备按轴自动或显式数据对齐功能的数据结构，这可以防止许多由于数据没有对齐以及来自不同数据源（索引方式不同）的数据而导致的常见错误； 集成时间序列功能； 既能处理时间序列数据也能处理非时间序列数据的数据结构； 数学运算和约简（比如对某个轴求和）可以根据不同的元数据（轴编号）执行； 可以灵活处理缺失数据； 合并及其他出现在常见数据库（例如基于SQL的）中的关系型运算。  Pandas的导入约定：
from pandas import Series, DataFrame import pandas as pd import numpy as np  Series Series可以使用列表初始化，初始化时还可以指定索引名称。
Series可以被看成时一个定长的有序字典，因为它时索引值到数据值的一个映射，它可以用在许多原本需要字典参数的函数中。
如果数据被存放在一个Python字典中，也可以直接通过这个字典来创建Series。通过指定 index 可以只选择需要的对象，缺失值使用NaN自动填充。
obj = Series([4, 7, -5, 3]) obj, obj.values, obj.index obj = Series([4, 7, -5, 3], index=[&#39;d&#39;, &#39;b&#39;, &#39;a&#39;, &#39;c&#39;]) obj[obj &amp;gt; 0] obj * 2 np.exp(obj) &#39;b&#39; in obj sdata = {&#39;Ohio&#39;: 35000, &#39;Texas&#39;: 71000, &#39;Oregon&#39;: 16000, &#39;Utah&#39;: 5000} sdata = Series(sdata) sdata  Ohio 35000 Oregon 16000 Texas 71000 Utah 5000 dtype: int64  states = [&#39;California&#39;, &#39;Ohio&#39;, &#39;Oregon&#39;, &#39;Texas&#39;] obj = Series(sdata, index=states) obj  California NaN Ohio 35000.</description>
    </item>
    
    <item>
      <title>Pandas学习笔记（一）：CSV数据加载保存</title>
      <link>http://hshsh.me/post/2016-04-12-python-pandas-notes-01/</link>
      <pubDate>Tue, 12 Apr 2016 18:52:25 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-12-python-pandas-notes-01/</guid>
      <description>加载CSV数据 很多数据都存储在CSV文件中，Pandas 为读取提供了一个强大的 read_csv 函数，这个函数接受很多可选参数，通过参数控制数据加载的方式，以及一些基本的清理工作。
pd.read_csv(filepath_or_buffer, sep=&#39;,&#39;, delimiter=None, header=&#39;infer&#39;, names=None, index_col=None, usecols=None, squeeze=False, prefix=None, mangle_dupe_cols=True, dtype=None, engine=None, converters=None, true_values=None, false_values=None, skipinitialspace=False, skiprows=None, skipfooter=None, nrows=None, na_values=None, keep_default_na=True, na_filter=True, verbose=False, skip_blank_lines=True, parse_dates=False, infer_datetime_format=False, keep_date_col=False, date_parser=None, dayfirst=False, iterator=False, chunksize=None, compression=&#39;infer&#39;, thousands=None, decimal=&#39;.&#39;, lineterminator=None, quotechar=&#39;&amp;quot;&#39;, quoting=0, escapechar=None, comment=None, encoding=None, dialect=None, tupleize_cols=False, error_bad_lines=True, warn_bad_lines=True, skip_footer=0, doublequote=True, delim_whitespace=False, as_recarray=False, compact_ints=False, use_unsigned=False, low_memory=True, buffer_lines=None, memory_map=False, float_precision=None) Returns result : DataFrame or TextParser  很多参数都是非常有用的，简要记录一下（详细文档请参考 help(pd.read_csv) 及官方文档）：</description>
    </item>
    
  </channel>
</rss>