<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/mysql/</link>
    <description>Recent content in Mysql on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 Apr 2016 11:42:00 +0800</lastBuildDate>
    
	<atom:link href="http://hshsh.me/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL &amp; SQL 常用命令笔记</title>
      <link>http://hshsh.me/post/2016-04-27-mysql-sql-commands-notes/</link>
      <pubDate>Wed, 27 Apr 2016 11:42:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-27-mysql-sql-commands-notes/</guid>
      <description>查看数据库和数据表结构 $ mysql -u user -p mysql&amp;gt; show databases; mysql&amp;gt; show tables; mysql&amp;gt; use {DATABASE_NAME}; mysql&amp;gt; show columns from {TABLE_NAME}; mysql&amp;gt; show create table {TABLE_NAME}; mysql&amp;gt;  变更数据表结构 # 重命名字段并可选修改字段类型 alter table {TABLE_NAME} change {OLD_COLUMN} {NEW_COLUMN} {COLUMN_TYPE}; # 修改字段类型不重命名字段 alter table {TABLE_NAME} modify {COLUMN_NAME} {COLUMN_TYPE}; # 增加字段 alter table {TABLE_NAME} add column {COLUMN_NAME} {COLUMN_TYPE}; # 删除字段 alter table {TABLE_NAME} drop column {COLUMN_NAME};  快速批量加载数据到数据库 NOTE: 下面命令中{...}表示必填参数，[...]表示选项参数
# 逗号分隔的 csv 文件, 字段列表可选 load data local infile &amp;quot;/path/to/file.</description>
    </item>
    
    <item>
      <title>XtraBackup热备份MySQL主从同步笔记</title>
      <link>http://hshsh.me/post/2016-04-26-mysql-hot-backup-with-xtrabackup/</link>
      <pubDate>Tue, 26 Apr 2016 18:30:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-26-mysql-hot-backup-with-xtrabackup/</guid>
      <description>公司的MySQL数据库单实例裸跑了一个多月，今天终于做了主从同步，暂时主要起备份作用，庆幸这段时间没有发生意外。
先说主要的参考资料，强烈推荐阅读：
 XtraBackup不停机不锁表搭建MySQL主从同步实践 使用 Xtrabackup 在线对MySQL做主从复制 通过XtraBackup实现不停机不锁表搭建主从同步  更新历史:
2016-04-26: 初稿.
2016-12-19:
 修复 innobackupex 命令错误: &amp;ldquo;xtrabackup: Error: &amp;ndash;defaults-file must be specified first on the command line&amp;rdquo;. 添加 &amp;ldquo;主从复制心跳和连接超时&amp;rdquo; 内容.  简介 转载一下主从同步和XtraBackup的简介：
MySQL主从同步原理
MySQL主从同步是在MySQL主从复制(Master-Slave Replication)基础上实现的，通过设置在Master MySQL上的binlog(使其处于打开状态)，Slave MySQL上通过一个I/O线程从Master MySQL上读取binlog，然后传输到Slave MySQL的中继日志中，然后Slave MySQL的SQL线程从中继日志中读取中继日志，然后应用到Slave MySQL的数据库中。这样实现了主从数据同步功能。
XtraBackup备份原理
innobackupex在后台线程不断追踪InnoDB的日志文件，然后复制InnoDB的数据文件。数据文件复制完成之后，日志的复制线程也会结束。这样就得到了不在同一时间点的数据副本和开始备份以后的事务日志。完成上面的步骤之后，就可以使用InnoDB崩溃恢复代码执行事务日志（redo log），以达到数据的一致性。
备份分为两个过程：
 backup，备份阶段，追踪事务日志和复制数据文件（物理备份）。 preparing，重放事务日志，使所有的数据处于同一个时间点，达到一致性状态。  XtraBackup的优点
 可以快速可靠的完成数据备份（复制数据文件和追踪事务日志） 数据备份过程中不会中断事务的处理（热备份） 节约磁盘空间和网络带宽 自动完成备份鉴定 因更快的恢复时间而提高在线时间  操作笔记 参考的两篇文章里面说的挺详细的，但是有部分命令和命令执行顺序写的不大明白，这里简单记录以下。
完整的步骤
 主、从服务器上都搭好MySQL服务，从服务器上MySQL版本大于等于主服务器，最好完全一致 在要做主从同步的服务器上分别安装XtraBackup 如果从服务器上有MySQL实例，停掉服务，备份删除数据库内容，保留数据库目录 配置主从服务器打开主从同步功能 主服务器上执行备份 传输备份文件到从服务器，并同步数据文件（apply-log） 从服务器上恢复备份 主服务器上授权同步帐号 从服务器上设置MASTER并开启同步  完成，可以检查同步状态了！</description>
    </item>
    
    <item>
      <title>MySQL配置文件参考</title>
      <link>http://hshsh.me/post/2016-04-05-mysql-configuration-notes/</link>
      <pubDate>Tue, 05 Apr 2016 14:48:25 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-05-mysql-configuration-notes/</guid>
      <description>最近公式生产环境中使用MySQL做数据存储，把数据库跑起来不复杂，但是各种参数的设置调优可真是技术活。
这是配置MySQL的学习笔记，大部分内容出自：http://wsgzao.github.io/post/ltmp/
MySQL数据库配置 MySQL客户端配置： [client] # 客户端连接默认字符集 default-character-set = utf8 port = 3306 socket = /tmp/mysql.sock [mysql] #prompt=&amp;quot;(\u:HOSTNAME:)[\d]&amp;gt; &amp;quot; #mysql提示符中显示当前用户、数据库、时间等信息 prompt=&amp;quot;\u@\h \R:\m:\s [\d]&amp;gt; &amp;quot; #no-auto-rehash # 自动补全功能，取消自动补全可以提高启动速度  MySQL服务端配置 [mysqld] # 唯一的服务标识号，主从同步会涉及 server-id = 1 port = 3306 user = mysql basedir = /app/local/mysql datadir = /app/data/mysql/data socket = /tmp/mysql.sock log-error = /app/data/mysql/mysql_error.log pid-file = /app/data/mysql/mysql.pid sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES # 默认存储引擎 default-storage-engine = InnoDB # 设置最大并发连接数，如果前端程序是PHP，可适当加大，但不可过大。 # 如果前端程序采用连接池，可适当调小，避免连接数过大 max_connections = 512 # 最大连接错误次数，可适当加大，防止频繁连接错误后，前端host被mysql拒绝掉 max_connect_errors = 100000 # 所有线程所打开表的数量 table_open_cache = 512 # 不允许外部文件级别的锁.</description>
    </item>
    
  </channel>
</rss>