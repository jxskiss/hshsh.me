<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sqlalchemy on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/sqlalchemy/</link>
    <description>Recent content in Sqlalchemy on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 04 Apr 2016 19:18:09 +0800</lastBuildDate>
    
	<atom:link href="http://hshsh.me/tags/sqlalchemy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQLAlchemy学习笔记（一）</title>
      <link>http://hshsh.me/post/2016-04-04-sqlalchemy-study-notes-01/</link>
      <pubDate>Mon, 04 Apr 2016 19:18:09 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-04-sqlalchemy-study-notes-01/</guid>
      <description>这篇笔记部分内容来自网络1，部分来自对《Essential SQLAlchemy》的学习和使用经验。
SQLAlchemy是 Python 编程语言下的一款开源软件。提供了SQL工具包及对象关系映射（ORM）工具，使用MIT许可证发行。
SQLAlchemy“采用简单的Python语言，为高效和高性能的数据库访问设计，实现了完整的企业级持久模型”。
SQLAlchemy的理念是，SQL数据库的量级和性能重要于对象集合；而对象集合的抽象又重要于表和行。因此，SQLAlchmey 采用了类似于Java里 Hibernate 的数据映射模型，而不是其他ORM框架采用的 Active Record 模型。不过，Elixir 和 declarative 等可选插件可以让用户使用声明语法。
SQLAlchemy首次发行于2006年2月，并迅速地在Python社区中最广泛使用的ORM工具之一，不亚于Django的ORM框架。
以上摘自维基百科。
使用SQLAlchemy有三种方式：
 使用 Raw SQL 使用 SQL Expression 使用 ORM  前两种方式可以统称为 core 方式。
对于绝大多数应用，推荐使用 SQLAlchemy，即使是使用 Raw SQL，也可以带来如下好处。
 内建数据库连接池。注意：如果是 SQLAlchemy + cx_oracle 的话，需要禁用 Connection Pool，否则会有异常。方法是设置sqlalchemy.poolclass为sqlalchemy.pool.NullPool 强大的日志功能（log） 数据库无关的写法，包括：SQL参数写法、LIMIT语法等 特别提一下，WHERE 条件的 == value 写法，如果value等于None，真正的SQL会转为 IS NULL  SQLAlchemy 的 Raw SQL 和 SQL Expression 比较：
 SQL Expression 的写法是纯 Python 代码，阅读性更好，尤其是在使用 insert() 方法时，字段名和取值成对出现。 Raw SQL 比 SQL Expression 更灵活，如果 SQL/DDL 很复杂，Raw SQL 就更有优势了。  常用数据库连接字符串 import sqlalchemy from sqlalchemy import create_engine # file database # sqlite = create_engine(&#39;sqlite:////absolute/path/to/database.</description>
    </item>
    
  </channel>
</rss>