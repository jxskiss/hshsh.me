<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tricks on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/tricks/</link>
    <description>Recent content in Tricks on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 Oct 2017 01:40:00 +0800</lastBuildDate>
    
	<atom:link href="http://hshsh.me/tags/tricks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>用OpenResty构建动态代理服务</title>
      <link>http://hshsh.me/post/2017-10-29-openresty-dynamic-upstreams/</link>
      <pubDate>Sun, 29 Oct 2017 01:40:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2017-10-29-openresty-dynamic-upstreams/</guid>
      <description>最近的项目使用了前后端分离的开发模式，前后端都在同一台机器上开发，需要对前后端开发配置联调服务。解决这个问题方法很多，Nginx/OpenResty 是其中一种。
后来又有其他项目的前端后端同学也在这台服务器上做开发。
后来，这台服务器绑定了多个域名，要对多个域名、多个端口做解析。
再后来，其中一个项目的后端开始以微服务的方式开发，对不同路径要代理到不同的后端开发端口上去。
既然已经走了这么远，索性再扩展一下，除了支持代理到端口，再加上指定文件夹静态文件服务呗，于是有了下面的配置。
功能列表：
 一个端口支持多域名，访问不同域名可以转发到不同上游服务 一个域名下，可以按照项目分组，不同项目可以配置不同后端服务 一个项目可以根据路由配置多个对应后端服务 支持不带后端路由的直接转发 支持指定文件夹静态文件服务 上述一切都可以通过接口在线配置，不需要修改 Nginx/OpenResty 配置文件，并且自带接口文档  依赖：OpenResty，安装请参考官方文档。
# #### OpenResty dynamic upstreams #### # 配置表，key 有三种格式 # 1. example.domain.name:port_number # value 有三种格式： # - upstream_ip:port # - upstream_ip:port,project # - /absolute/path/to/document/root # 2. example.domain.name:project_name # value JSON格式的路由表 # 2. kv:runtime_variable_name # value 所有请求共享的运行时变量 lua_shared_dict dyn_registry 1m; server { # 把可以配置的端口全部注册在这里，一行一个，比如 9000 - 9009 listen 9000; listen 9001; # listen .</description>
    </item>
    
    <item>
      <title>Django Admin 定制开发技巧</title>
      <link>http://hshsh.me/post/2017-06-13-django-admin-ticks/</link>
      <pubDate>Tue, 13 Jun 2017 23:00:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2017-06-13-django-admin-ticks/</guid>
      <description>过滤器（Filters） 下拉列表式过滤器 模版文件：
{% load i18n %} &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;var go_from_select = function(opt) { window.location = window.location.pathname + opt };&amp;lt;/script&amp;gt; &amp;lt;h3&amp;gt;{% blocktrans with filter_title=title %} By {{ filter_title }} {% endblocktrans %}&amp;lt;/h3&amp;gt; &amp;lt;ul class=&amp;quot;admin-filter-{{ title|cut:&#39; &#39; }}&amp;quot;&amp;gt; {% if choices|slice:&amp;quot;4:&amp;quot; %} &amp;lt;li&amp;gt; &amp;lt;select style=&amp;quot;width: 95%;&amp;quot; onchange=&amp;quot;go_from_select(this.options[this.selectedIndex].value)&amp;quot;&amp;gt; {% for choice in choices %} &amp;lt;option{% if choice.selected %} selected=&amp;quot;selected&amp;quot;{% endif %} value=&amp;quot;{{ choice.query_string|iriencode }}&amp;quot;&amp;gt;{{ choice.display }}&amp;lt;/option&amp;gt; {% endfor %} &amp;lt;/select&amp;gt; &amp;lt;/li&amp;gt; {% else %} {% for choice in choices %} &amp;lt;li{% if choice.</description>
    </item>
    
  </channel>
</rss>