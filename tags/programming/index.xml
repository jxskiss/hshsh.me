<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/programming/</link>
    <description>Recent content in Programming on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 22 Oct 2017 16:30:00 +0800</lastBuildDate>
    
	<atom:link href="http://hshsh.me/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>单文件 Vue Webpack 配置</title>
      <link>http://hshsh.me/post/2017-10-22-single-file-vue-webpack/</link>
      <pubDate>Sun, 22 Oct 2017 16:30:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2017-10-22-single-file-vue-webpack/</guid>
      <description>在今年的工作中接触到了前端框架 Vue.js 和构建工具 Webpack。虽然没写了几行前端界面代码， 不过对 Webpack 配置倒是花了一些时间学习，整理了一个针对 Vue.js 的单文件 Webpack 配置。 本文通过对配置文件的注释解析分享 Webpack 配置的一些要点。
本文中配置已经整理为一个糅合了 Django、Tornado、Vue.js、Webpack 的 Django 项目模板，主要作为学习记录用途。不过在 Django、Tornado 和 Webpack 的工程配置方面都有一些巧妙地处理，作为前后端分离的工程项目模板也是一个很好的开始（我就是这么用的）。欢迎 Star。
配置目标  版本：Vue 2.0+、Webpack 2.0+ 支持单页面应用和多页面应用 多页面应用，每个应用入口可选指定自己的HTML模板 多页面应用，可以通过环境变量或命令行选项支持构建指定页面 支持本地 devServer，可指定运行端口，指定开发页面 支持 TypeScript，.ts 文件和 Vue.js 单文件组件  项目说明 目录结构 该配置是结合后端 Django 开发做的，因此前端文件放在 frontend 子目录中， 同时为了方便使用 apidocjs 编译API文档，package.json、tsconfig.json、 webpack.config.js 等前端配置文件放在项目根目录下。
对 Django 有所了解的同学，看到 apps/ 子目录可能会感到奇怪，这里通过修改 manage.py 文件对 startapp 命令打了一个补丁，把所有新建 app 都放置在 apps/ 子目录中以维持目录结构清晰。
├── frontend/ │ ├── dist/ # 打包发布目录 │ ├── src/ │ │ ├── assets/ # 静态资源 │ │ │ ├── css/ │ │ │ └── images/ │ │ ├── components/ # 页面组件 │ │ │ └── Hello.</description>
    </item>
    
    <item>
      <title>Django Admin 定制开发技巧</title>
      <link>http://hshsh.me/post/2017-06-13-django-admin-ticks/</link>
      <pubDate>Tue, 13 Jun 2017 23:00:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2017-06-13-django-admin-ticks/</guid>
      <description>过滤器（Filters） 下拉列表式过滤器 模版文件：
{% load i18n %} &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;var go_from_select = function(opt) { window.location = window.location.pathname + opt };&amp;lt;/script&amp;gt; &amp;lt;h3&amp;gt;{% blocktrans with filter_title=title %} By {{ filter_title }} {% endblocktrans %}&amp;lt;/h3&amp;gt; &amp;lt;ul class=&amp;quot;admin-filter-{{ title|cut:&#39; &#39; }}&amp;quot;&amp;gt; {% if choices|slice:&amp;quot;4:&amp;quot; %} &amp;lt;li&amp;gt; &amp;lt;select style=&amp;quot;width: 95%;&amp;quot; onchange=&amp;quot;go_from_select(this.options[this.selectedIndex].value)&amp;quot;&amp;gt; {% for choice in choices %} &amp;lt;option{% if choice.selected %} selected=&amp;quot;selected&amp;quot;{% endif %} value=&amp;quot;{{ choice.query_string|iriencode }}&amp;quot;&amp;gt;{{ choice.display }}&amp;lt;/option&amp;gt; {% endfor %} &amp;lt;/select&amp;gt; &amp;lt;/li&amp;gt; {% else %} {% for choice in choices %} &amp;lt;li{% if choice.</description>
    </item>
    
  </channel>
</rss>