<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 27 Apr 2016 12:00:00 +0800</lastBuildDate>
    <atom:link href="http://hshsh.me/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ubuntu &amp; Linux 常用命令笔记</title>
      <link>http://hshsh.me/post/2016-04-27-ubuntu-linux-shell-commands-notes/</link>
      <pubDate>Wed, 27 Apr 2016 12:00:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-27-ubuntu-linux-shell-commands-notes/</guid>
      <description>

&lt;h2 id=&#34;系统配置&#34;&gt;系统配置&lt;/h2&gt;

&lt;h3 id=&#34;安装-oracle-jdk&#34;&gt;安装 Oracle JDK&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo add-apt-repository ppa:webupd8team/java
$ sudo apt-get update
$ sudo apt-get install oracle-java8-installer
$ sudo apt-get install oracle-java8-set-default
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;永久性修改系统dns&#34;&gt;永久性修改系统DNS&lt;/h3&gt;

&lt;p&gt;编辑&lt;code&gt;/etc/network/interfaces&lt;/code&gt;文件，在最后添加一行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;dns-nameservers 8.8.8.8 8.8.4.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者可以修改&lt;code&gt;/etc/resolvconf/resolv.conf.d/base&lt;/code&gt;文件，默认为空，在其中插入：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;nameserver 8.8.8.8
nameserver 8.8.4.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果有多个DNS，就每行添加一个。&lt;/p&gt;

&lt;p&gt;NOTE：亲测，以上设置，需要重启系统后生效！&lt;/p&gt;

&lt;h2 id=&#34;常用命令行工具&#34;&gt;常用命令行工具&lt;/h2&gt;

&lt;h3 id=&#34;查看进程&#34;&gt;查看进程&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ps ax
$ ps aux
$ ps ax | less
$ ps ax | grep ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;查看端口&#34;&gt;查看端口&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ netstat -tap | grep ...
$ netstat -na | grep ...
$ ss -tln | grep ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;监控日志文件&#34;&gt;监控日志文件&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ tail -f /path/to/file.log
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;重启-x-server&#34;&gt;重启 X Server&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cat /etc/X11/default-display-manager
$ sudo restart {DISPLAY_MANAGER}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;输出重定向&#34;&gt;输出重定向&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cat foo &amp;gt; foo.txt  # 重定向标准输出到文件
$ cat foo 2&amp;gt; foo.txt  # 重定向错误输出到文件
$ cat foo 2&amp;gt;&amp;amp;1  # 重定向错误输出到标准输出
$ cat foo &amp;gt; foo.txt 2&amp;gt;&amp;amp;1  # 重定向标准输出和错误输出到文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果要写入的文件权限不够，可以这样（&lt;code&gt;-a&lt;/code&gt;选项表示追加内容到文件）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo sh -c &amp;quot;echo &#39;xxx&#39;&amp;quot; &amp;gt; /path/to/somefile
$ echo &#39;xxx&#39; | sudo tee -a /path/to/somefile
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>XtraBackup热备份MySQL主从同步笔记</title>
      <link>http://hshsh.me/post/2016-04-26-mysql-hot-backup-with-xtrabackup/</link>
      <pubDate>Tue, 26 Apr 2016 18:30:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-26-mysql-hot-backup-with-xtrabackup/</guid>
      <description>

&lt;p&gt;公司的MySQL数据库单实例裸跑了一个多月，今天终于做了主从同步，暂时主要起备份作用，庆幸这段时间没有发生意外。&lt;/p&gt;

&lt;p&gt;先说主要的参考资料，强烈推荐阅读：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wsgzao.github.io/post/xtrabackup/&#34;&gt;XtraBackup不停机不锁表搭建MySQL主从同步实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://seanlook.com/2015/12/14/mysql-replicas/&#34;&gt;使用 Xtrabackup 在线对MySQL做主从复制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000002575399&#34;&gt;通过XtraBackup实现不停机不锁表搭建主从同步&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;

&lt;p&gt;转载一下主从同步和XtraBackup的简介：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MySQL主从同步原理&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MySQL主从同步是在MySQL主从复制(Master-Slave Replication)基础上实现的，通过设置在Master MySQL上的binlog(使其处于打开状态)，Slave MySQL上通过一个I/O线程从Master MySQL上读取binlog，然后传输到Slave MySQL的中继日志中，然后Slave MySQL的SQL线程从中继日志中读取中继日志，然后应用到Slave MySQL的数据库中。这样实现了主从数据同步功能。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;XtraBackup备份原理&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;innobackupex在后台线程不断追踪InnoDB的日志文件，然后复制InnoDB的数据文件。数据文件复制完成之后，日志的复制线程也会结束。这样就得到了不在同一时间点的数据副本和开始备份以后的事务日志。完成上面的步骤之后，就可以使用InnoDB崩溃恢复代码执行事务日志（redo log），以达到数据的一致性。&lt;/p&gt;

&lt;p&gt;备份分为两个过程：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;backup，备份阶段，追踪事务日志和复制数据文件（物理备份）。&lt;/li&gt;
&lt;li&gt;preparing，重放事务日志，使所有的数据处于同一个时间点，达到一致性状态。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;XtraBackup的优点&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;可以快速可靠的完成数据备份（复制数据文件和追踪事务日志）&lt;/li&gt;
&lt;li&gt;数据备份过程中不会中断事务的处理（热备份）&lt;/li&gt;
&lt;li&gt;节约磁盘空间和网络带宽&lt;/li&gt;
&lt;li&gt;自动完成备份鉴定&lt;/li&gt;
&lt;li&gt;因更快的恢复时间而提高在线时间&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;操作笔记&#34;&gt;操作笔记&lt;/h2&gt;

&lt;p&gt;参考的两篇文章里面说的挺详细的，但是有部分命令和命令执行顺序写的不大明白，这里简单记录以下。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;完整的步骤&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;主、从服务器上都搭好MySQL服务，从服务器上MySQL版本大于等于主服务器，最好完全一致&lt;/li&gt;
&lt;li&gt;在要做主从同步的服务器上分别安装XtraBackup&lt;/li&gt;
&lt;li&gt;如果从服务器上有MySQL实例，停掉服务，备份删除数据库内容，保留数据库目录&lt;/li&gt;
&lt;li&gt;配置主从服务器打开主从同步功能&lt;/li&gt;
&lt;li&gt;主服务器上执行备份&lt;/li&gt;
&lt;li&gt;传输备份文件到从服务器，并同步数据文件（apply-log）&lt;/li&gt;
&lt;li&gt;从服务器上恢复备份&lt;/li&gt;
&lt;li&gt;主服务器上授权同步帐号&lt;/li&gt;
&lt;li&gt;从服务器上设置MASTER并开启同步&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;完成，可以检查同步状态了！&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;具体操作过程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;NOTE：以下命令以普通用户权限运行，如果需要ROOT权限，均使用&lt;code&gt;sudo&lt;/code&gt;执行。默认均使用Ubuntu发行版仓库中的MySQL，版本比较旧，如果使用官方发行版本，需要注意相关选项、目录等配置。&lt;/p&gt;

&lt;p&gt;一、主从服务器上搭建MySQL服务，并检查MySQL版本：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# master &amp;amp; slave
sudo apt-get install mysql-server
mysql --version
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;mysql  Ver 14.14 Distrib 5.5.49, for debian-linux-gnu (x86_64) using readline 6.3&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;二、主从服务器上分别安装XtraBackup，根据官方网站指导使用打包好的二进制，选择最新的稳定版2.4：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# master &amp;amp; slave
wget https://repo.percona.com/apt/percona-release_0.1-3.$(lsb_release -sc)_all.deb
sudo dpkg -i percona-release_0.1-3.$(lsb_release -sc)_all.deb
sudo apt-get update
sudo apt-get install percona-xtrabackup-24
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;三、停掉从服务器上MySQL服务，备份原有数据库，并删除原有数据库内容：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysqldump -u$USER -p$PASSWORD -h127.0.0.1 -P3306 --routines \
  --default-character-set=utf8 --locak-all-tables --add-drop-database -A \
  db.all.sql
sudo service mysql stop
sudo cd /var/lib/mysql
# 下面这句千万别打错了，后果会很严重
sudo rm -rf ./*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;四、配置MySQL打开主从同步功能&lt;/p&gt;

&lt;p&gt;主服务器上编辑&lt;code&gt;/etc/mysql/my.conf&lt;/code&gt;文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[mysqld]
# 注意主从之间的server-id不能相同
server-id    = 1
log_bin      = /var/log/mysql/mysql-bin.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果主服务器上MySQL是已经上线的系统，需要重启一下（实测&lt;code&gt;/etc/init.d/mysql reload&lt;/code&gt;不起作用）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service mysql restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从服务器上编辑&lt;code&gt;/etc/mysql/my.conf&lt;/code&gt;文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[mysqld]
# 注意主从之间的server-id不能相同
server-id    = 2
# 最好设置从服务器为只读
# 注意：即使这里设置了只读，使用具有super权限的用户登录，也还是可以做写操作的
read_only    = ON
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询主从服务器状态：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql -u USER -p PASSWD -e &amp;quot;show global variables like &#39;server-id&#39;;&amp;quot;
    +---------------+-------+
    | Variable_name | Value |
    +---------------+-------+
    | server_id     | 1     |
    +---------------+-------+

mysql -u USER -p PASSWD -e &amp;quot;show global variables like &#39;log_bin&#39;;&amp;quot;
    +---------------+-------+
    | Variable_name | Value |
    +---------------+-------+
    | log_bin       | ON    |
    +---------------+-------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;五、主服务器上执行备份操作&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo innobackupex --user=USER --password --defaults-file=/etc/mysql/my.cnf \
  --parallel=4 /tmp/mybackup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令输出的最后几行通常类似这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;innobackupex: Backup created in directory &#39;/tmp/mybackup/2016-04-26_17-41-51&#39;
innobackupex: MySQL binlog position: filename &#39;mysql-bin.000003&#39;, position 1946
111225 00:00:53 innobackupex: completed OK!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;命令执行完在&lt;code&gt;/tmp/mybackup&lt;/code&gt;目录下生成的&lt;code&gt;2016-04-26_17-41-51&lt;/code&gt;目录，里面存储的是备份的数据，下一步要传输到从服务器上的即是这个文件夹。&lt;/p&gt;

&lt;p&gt;输出中的&lt;code&gt;MySQL binlog position: filename &#39;mysql-bin.000003&#39;, position 1946&lt;/code&gt;里面的两个数字，要记录以下，后面恢复到从服务器上的时候要用到。&lt;/p&gt;

&lt;p&gt;六、传输并同步备份数据&lt;/p&gt;

&lt;p&gt;读取备份数据需要ROOT权限，下面的命令需要使用sudo执行。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /tmp/mybackup
sudo scp -r /tmp/mybackup/2016-04-26_17-44-49 USER@SLAVE:/tmp/mybackup/2016-04-26
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在从服务器上执行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo innobackupex --apply-log /tmp/mybackup/2016-04-26
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;七、从服务器上恢复备份数据&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 恢复数据
sudo innobackupex --user=USER --password --defaults-file=/etc/mysql/my.cnf \
  --copy-back /tmp/mybackup/2016-04-26/
# 需要恢复权限给mysql
sudo chown -R mysql:mysql /var/lib/mysql
# 启动MySQL
sudo service mysql start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE: 如果从数据库存在多个MySQL，执行命令有所不同，请另行查阅相关资料。&lt;/p&gt;

&lt;p&gt;八、主服务器上授权同步帐号&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;mysql -u USER -p PASSWD -h HOST -P PORT
&amp;gt; grant replication slave on *.* to &#39;slave&#39;@&#39;10.10.16.24&#39; identified by &#39;slave_passport&#39;;
&amp;gt; flush privileges;
&amp;gt; 
&amp;gt; select distinct concat(&#39;User: &#39;&#39;&#39;,user,&#39;&#39;&#39;@&#39;&#39;&#39;,host,&#39;&#39;&#39;;&#39;) as query from mysql.user;
&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后一条语句查询当前数据库中的用户信息，检查&lt;code&gt;slave_passport&lt;/code&gt;是否在其中。&lt;/p&gt;

&lt;p&gt;九、配置从服务器开启同步&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;mysql -u USER -p PASSWD -h HOST -p PORT
&amp;gt; change master to
&amp;gt; master_host = &#39;10.10.16.51&#39;,
&amp;gt; master_user = &#39;slave&#39;,
&amp;gt; master_password = &#39;slave_password&#39;,
&amp;gt; master_port = 3306,
&amp;gt; master_log_file = &#39;mysql-bin.000003&#39;,
&amp;gt; master_log_pos = 1946;
&amp;gt; 
&amp;gt; start slave;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看主库同步状态：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql -u USER -p PASSWD -h MASTER_HOST -P MASTER_PORT \
  -e &amp;quot;show master status \G;&amp;quot;
mysql -u USER -p PASSWD -h SLAVE_HOST -P SLAVE_PORT \
  -e &amp;quot;show processlist \G;&amp;quot; | grep -i &#39;master&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查第二条命令输出是否类似“State: Master has sent all binlog to slave; waiting for binlog to be updated”这样。&lt;/p&gt;

&lt;p&gt;查看从库同步状态：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql -u USER -p PASSWD -h SLAVE_HOST -P SLAVE_PORT \
  -e &amp;quot;show slave status \G;&amp;quot;
mysql -u USER -p PASSWD -h SLAVE_HOST -P SLAVE_PORT \
  -e &amp;quot;show processlist \G;&amp;quot; | egrep -i &#39;(master|slave)&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查命令输出是否包含类似下面这样的语句：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Slave_IO_State: Waiting for master to send event
Slave_IO_Running: Yes
Slave_SQL_Running: Yes
Slave_SQL_Running_State: Slave has read all relay log; waiting for the slave I/O thread to update it

State: Waiting for master to send event
State: Slave has read all relay log; waiting for the slave I/O thread to update it
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mysql主从切换&#34;&gt;MySQL主从切换&lt;/h2&gt;

&lt;p&gt;这里暂时还没有用到主从切换，不过参考资料&lt;a href=&#34;http://wsgzao.github.io/post/xtrabackup/&#34;&gt;XtraBackup不停机不锁表搭建MySQL主从同步实践&lt;/a&gt;中有写到主从切换的过程，复制粘贴一下以后好找：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;#查看主库状态
show processlist;
Master has sent all binlog to slave; waiting for binlog to be updated
show master status \G

#从库停止 IO_THREAD 线程
stop slave IO_THREAD;
show processlist;
Slave has read all relay log; waiting for the slave I/O thread to update it
show slave status \G

#从库切换为主库
stop slave;
reset master;
reset slave all;
show master status \G

#激活帐户
SELECT DISTINCT CONCAT(&#39;User: &#39;&#39;&#39;,user,&#39;&#39;&#39;@&#39;&#39;&#39;,host,&#39;&#39;&#39;;&#39;) AS query FROM mysql.user;
GRANT REPLICATION SLAVE ON *.* TO &#39;slave_passport&#39;@&#39;10.10.16.51&#39; IDENTIFIED BY &#39;slave_passport&#39;;
FLUSH PRIVILEGES;

#切换原有主库为从库
reset master;
reset slave all;

CHANGE MASTER TO
MASTER_HOST=&#39;10.10.16.24&#39;,
MASTER_USER=&#39;slave_passport&#39;,
MASTER_PASSWORD=&#39;slave_passport&#39;,
MASTER_PORT=3306,
MASTER_LOG_FILE=&#39;mysql-bin.000001&#39;,
MASTER_LOG_POS=804497686;

#检查主库
SHOW PROCESSLIST;
show master status \G

#启动从库
SHOW PROCESSLIST;
start slave;
show slave status \G
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>