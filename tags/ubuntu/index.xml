<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ubuntu on hshsh&#39;s little site</title>
    <link>http://hshsh.me/tags/ubuntu/</link>
    <description>Recent content in Ubuntu on hshsh&#39;s little site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Aug 2016 11:03:30 +0800</lastBuildDate>
    
	<atom:link href="http://hshsh.me/tags/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu14.04上DNS引发的血案</title>
      <link>http://hshsh.me/post/2016-08-09-ubuntu-14.04-dnsmasq/</link>
      <pubDate>Tue, 09 Aug 2016 11:03:30 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-08-09-ubuntu-14.04-dnsmasq/</guid>
      <description>作为技术备忘，为了纪念为此死去的千千万万脑细胞，先说问题：
公司搬家后，一台工作站上的爬虫程序突然莫名其妙的变慢，从一天20多万条数据萎缩到了14W-20W条不稳定，因为新办公室里所有部门共用一条网线，起初还以为是网络拥挤，属于正常情况，后来居然夸张的变成了每天3W条数据，经过跟踪发现这个爬虫全天候不分时间段的慢，这就很不对了。然后开始一系列的排查。
后来把爬虫里面用域名访问的代码改成使用IP地址访问，发现速度连接速度不慢，但是一使用域名就变龟速了，很明显域名解析出问题了，作为临时方案，我居然手写了一段IP地址缓存的代码，:(&amp;lt;
吐槽一下：Ubuntu系统配置DNS一点都不方便！！
发现工作站上的DNS服务器被配置成了8.8.8.8，然而这段时间Google的DNS抽风了，经常连接不上，所以解决办法就很简单了。
研究配置DNS的过程中，被灌输了一堆新名词：dnsmasq, resolv.conf, NetworkManager, resolvconf &amp;hellip;
没看全部的文档，根据查阅的部分资料，Ubuntu的DNS机制大概是这样的：
 NetworkManager管理DNS配置，图形界面“编辑连接”弹出来的就是这货，这里配置的DNS存储在/run/resolvconf/interface/NetworkManager文件中。 系统范围DNS的基本配置在/etc/resolvconf/resolv.conf.d/这个目录下面，这里有三个文件：base中是基本配置，系统动态生成resolv.conf文件时要包含的内容；head也是要包含在resolv.conf文件中的，里面主要包含一些说明，比如不要修改我会被覆盖之类的；tail里是要追加到动态生成的resolv.conf文件末尾的内容。 从Ubuntu 12.04开始，系统默认都会安装一个阉割版的dnsmasq服务（dnsmasq-base包，不是dnsmasq包），主要是为了解决DNS和VPN之间的什么什么暧昧问题的，监听在127.0.1.1:53地址上，系统DNS请求都会发到这个监听地址上。 系统启动或者执行resolvconf -u命令的时候，会根据配置动态生成DNS配置文件/ete/resolv.conf。  这个理解必然是不全面的，甚至有些完全就是错的，留待下次再搞DNS问题的时候研究吧。
相关的解决方法
安装完整功能的Dnsmasq：sudo apt-get install dnsmasq
配置Dnsmasq上游DNS服务器和本地监听地址，修改/etc/dnsmasq.conf文件：
listen-address=127.0.0.1,127.0.1.1 resolv-file=/etc/resolv.dnsmasq conf-dir=/etc/dnsmasq.d  /etc/resolv.dnsmasq文件里面写上游DNS服务器地址：
nameserver 114.114.114.114 nameserver 223.5.5.5 nameserver 114.114.115.115 nameserver 223.6.6.6  其他dnsmasq配置自由发挥就好啦～
修改系统DNS解析配置/etc/resolvconf/resolv.conf.d/base：
nameserver 127.0.0.1 nameserver 114.114.114.114 nameserver 223.5.5.5  然后启动dnsmasq服务：sudo service dnsmasq restart，更新DNS动态配置：sudo resolvconf -u。
以上步骤可能就解决问题了，也可能还会有问题，也可能会引入新的问题，比如参考资料4中提到的系统启动时候服务启动顺序的问题～～
Dnsmasq扩展阅读：
Dnsmasq提供DNS缓存和DHCP服务功能。作为域名解析服务器(DNS)，dnsmasq可以通过缓存DNS请求来提高对访问过的网址的连接速度。作为DHCP服务器，dnsmasq可以用于为局域网电脑分配内网ip地址和提供路由。DNS和DHCP两个功能可以同时或分别单独实现。dnsmasq轻量且易配置，适用于个人用户或少于50台主机的网络。此外它还自带了一个PXE服务器。&amp;gt;&amp;gt;&amp;gt;
不使用Dnsmasq直接设置系统的DNS服务器
修改/etc/resolvconf/resolv.conf.d/base文件中DNS配置：
nameserver 114.114.114.114 nameserver 223.5.5.5 nameserver 114.114.115.115 nameserver 223.6.6.6  参考资料：</description>
    </item>
    
    <item>
      <title>Ubuntu 14.04 使用阿里云源</title>
      <link>http://hshsh.me/post/2016-07-30-using-aliyun-mirror-for-ubuntu-14.04/</link>
      <pubDate>Sat, 30 Jul 2016 07:20:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-07-30-using-aliyun-mirror-for-ubuntu-14.04/</guid>
      <description>Ubuntu的官方源也是慢的不行不行的，怎么办？换阿里云的源，速度杠杠的！
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak # 备份 sudo vim /etc/apt/sources.list # 修改配置 sudo apt-get clean &amp;amp;&amp;amp; sudo apt-get update # 更新列表  修改源配置如下：
deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse deb-src http://mirrors.</description>
    </item>
    
    <item>
      <title>Ubuntu &amp; Linux 常用命令笔记</title>
      <link>http://hshsh.me/post/2016-04-27-ubuntu-linux-shell-commands-notes/</link>
      <pubDate>Wed, 27 Apr 2016 12:00:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-27-ubuntu-linux-shell-commands-notes/</guid>
      <description>系统配置 安装 Oracle JDK $ sudo add-apt-repository ppa:webupd8team/java $ sudo apt-get update $ sudo apt-get install oracle-java8-installer $ sudo apt-get install oracle-java8-set-default  永久性修改系统DNS 编辑/etc/network/interfaces文件，在最后添加一行：
dns-nameservers 8.8.8.8 8.8.4.4  或者可以修改/etc/resolvconf/resolv.conf.d/base文件，默认为空，在其中插入：
nameserver 8.8.8.8 nameserver 8.8.4.4  如果有多个DNS，就每行添加一个。
NOTE：亲测，以上设置，需要重启系统后生效！
常用命令行工具 查看进程 $ ps ax $ ps aux $ ps ax | less $ ps ax | grep ...  查看端口 $ netstat -tap | grep ... $ netstat -na | grep .</description>
    </item>
    
    <item>
      <title>XtraBackup热备份MySQL主从同步笔记</title>
      <link>http://hshsh.me/post/2016-04-26-mysql-hot-backup-with-xtrabackup/</link>
      <pubDate>Tue, 26 Apr 2016 18:30:00 +0800</pubDate>
      
      <guid>http://hshsh.me/post/2016-04-26-mysql-hot-backup-with-xtrabackup/</guid>
      <description>公司的MySQL数据库单实例裸跑了一个多月，今天终于做了主从同步，暂时主要起备份作用，庆幸这段时间没有发生意外。
先说主要的参考资料，强烈推荐阅读：
 XtraBackup不停机不锁表搭建MySQL主从同步实践 使用 Xtrabackup 在线对MySQL做主从复制 通过XtraBackup实现不停机不锁表搭建主从同步  更新历史:
2016-04-26: 初稿.
2016-12-19:
 修复 innobackupex 命令错误: &amp;ldquo;xtrabackup: Error: &amp;ndash;defaults-file must be specified first on the command line&amp;rdquo;. 添加 &amp;ldquo;主从复制心跳和连接超时&amp;rdquo; 内容.  简介 转载一下主从同步和XtraBackup的简介：
MySQL主从同步原理
MySQL主从同步是在MySQL主从复制(Master-Slave Replication)基础上实现的，通过设置在Master MySQL上的binlog(使其处于打开状态)，Slave MySQL上通过一个I/O线程从Master MySQL上读取binlog，然后传输到Slave MySQL的中继日志中，然后Slave MySQL的SQL线程从中继日志中读取中继日志，然后应用到Slave MySQL的数据库中。这样实现了主从数据同步功能。
XtraBackup备份原理
innobackupex在后台线程不断追踪InnoDB的日志文件，然后复制InnoDB的数据文件。数据文件复制完成之后，日志的复制线程也会结束。这样就得到了不在同一时间点的数据副本和开始备份以后的事务日志。完成上面的步骤之后，就可以使用InnoDB崩溃恢复代码执行事务日志（redo log），以达到数据的一致性。
备份分为两个过程：
 backup，备份阶段，追踪事务日志和复制数据文件（物理备份）。 preparing，重放事务日志，使所有的数据处于同一个时间点，达到一致性状态。  XtraBackup的优点
 可以快速可靠的完成数据备份（复制数据文件和追踪事务日志） 数据备份过程中不会中断事务的处理（热备份） 节约磁盘空间和网络带宽 自动完成备份鉴定 因更快的恢复时间而提高在线时间  操作笔记 参考的两篇文章里面说的挺详细的，但是有部分命令和命令执行顺序写的不大明白，这里简单记录以下。
完整的步骤
 主、从服务器上都搭好MySQL服务，从服务器上MySQL版本大于等于主服务器，最好完全一致 在要做主从同步的服务器上分别安装XtraBackup 如果从服务器上有MySQL实例，停掉服务，备份删除数据库内容，保留数据库目录 配置主从服务器打开主从同步功能 主服务器上执行备份 传输备份文件到从服务器，并同步数据文件（apply-log） 从服务器上恢复备份 主服务器上授权同步帐号 从服务器上设置MASTER并开启同步  完成，可以检查同步状态了！</description>
    </item>
    
  </channel>
</rss>